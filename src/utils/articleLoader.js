// Article loader utility for multilingual blog posts
// This file is auto-generated by init-articles.js
// Do not edit manually - run 'node init-articles.js' instead

import { useTranslation } from 'react-i18next';

const articleContents = {
  "zh": {
    "hello-world": "# Hello World - 编程入门指南\r\n\r\n**Published:** December 25, 2024\r\n**Category:** Programming\r\n**Read Time:** 3 min\r\n\r\n## 引言\r\n\r\n\"你好，世界！\"是每个程序员学习编程时的第一步。这个简单的程序不仅仅是代码，更代表着你正式迈入编程世界的大门。\r\n\r\n## 什么是Hello World\r\n\r\nHello World程序是一个计算机程序，它在计算机屏幕上输出或显示\"Hello, World!\"这句话。这是一个展示编程语言基本语法的标准示例。\r\n\r\n### 为什么重要\r\n\r\n- **验证环境**: 确保编程环境正确配置\r\n- **学习语法**: 掌握语言的基本结构\r\n- **建立信心**: 完成第一个程序带来的成就感\r\n\r\n## 不同语言的实现\r\n\r\n### Python\r\n```python\r\nprint(\"Hello, World!\")\r\n```\r\n\r\n### JavaScript\r\n```javascript\r\nconsole.log(\"Hello, World!\");\r\n```\r\n\r\n### Java\r\n```java\r\npublic class HelloWorld {\r\n    public static void main(String[] args) {\r\n        System.out.println(\"Hello, World!\");\r\n    }\r\n}\r\n```\r\n\r\n### C++\r\n```cpp\r\n#include <iostream>\r\n\r\nint main() {\r\n    std::cout << \"Hello, World!\" << std::endl;\r\n    return 0;\r\n}\r\n```\r\n\r\n## 编程学习建议\r\n\r\n### 1. 从基础开始\r\n不要急于求成，从最简单的程序入手。\r\n\r\n### 2. 多实践\r\n编程是一门实践性学科，多写代码、多调试。\r\n\r\n### 3. 学习思维方式\r\n编程不仅教你写代码，更重要的是培养逻辑思维。\r\n\r\n## 结语\r\n\r\n\"Hello, World!\"虽然简单，却承载着无限可能。从这里开始，你将开启一段精彩的编程之旅！\r\n\r\n祝你编程愉快！🚀\r\n",
    "modification-for-chained-list": "# 链式列表的修改\r\n\r\n**发布于:** 2024年12月20日\r\n**分类:** 编程\r\n**阅读时间:** 8分钟\r\n\r\n## 链式列表介绍\r\n\r\n链式列表是计算机科学中的基本数据结构，允许高效插入、删除和遍历元素。当需要频繁修改列表时，它特别有用。\r\n\r\n## 基本结构\r\n\r\n链式列表由节点组成，每个节点包含：\r\n- 数据元素\r\n- 指向下一个节点的指针\r\n\r\n## 优点\r\n\r\n- 动态大小\r\n- 高效的插入和删除\r\n- 没有浪费的内存空间\r\n\r\n## 常见操作\r\n\r\n链式列表最常见的操作包括：\r\n1. 在开头插入\r\n2. 在结尾插入\r\n3. 删除特定元素\r\n4. 遍历\r\n5. 搜索操作\r\n\r\n## 高级修改\r\n\r\n可以对链式列表进行几个高级修改来提高性能和功能：\r\n\r\n## 跳跃列表\r\n\r\n跳跃列表是一种概率性数据结构，允许比常规链表更快的搜索操作。\r\n\r\n## 内存管理\r\n\r\n通过维护freelast变量，我们可以高效地管理列表节点的内存分配和释放。\r\n\r\n## 循环链表\r\n\r\n在循环链表中，最后一个节点指向第一个节点，创建一个循环结构。\r\n\r\n## 结论\r\n\r\n链式列表是构成许多复杂数据结构和算法基础的多功能数据结构。理解它们的修改和应用对任何程序员都很重要。\r\n",
    "practice-of-chained-lists": "# CF1154E (Two Teams)\r\n\r\n**发布于:** 2024年9月8日\r\n**分类:** 编程\r\n**阅读时间:** 10分钟\r\n\r\n## 问题描述\r\n\r\n在这个CodeForces问题中，我们需要按照特定约束将玩家分成两个队伍。\r\n\r\n## 分析\r\n\r\n这个问题需要仔细考虑玩家关系和队伍平衡。\r\n\r\n## 解决方案\r\n\r\n我们将使用基于图的方法来建模玩家关系，并应用适当的算法来找到最佳队伍划分。\r\n\r\n## 实现\r\n\r\n让我们检查解决这个问题的实现细节和关键考虑因素。\r\n",
    "test-post-1": "# 测试文章1\r\n\r\n**发布于:** 2024年12月20日\r\n**分类:** 测试\r\n**阅读时间:** 2分钟\r\n\r\n## 这是一个测试文章\r\n\r\n这是第一个测试文章，用于演示博客功能。\r\n\r\n## 测试的功能\r\n\r\n- 文章渲染\r\n- 导航\r\n- 样式设置\r\n"
  },
  "en": {
    "hello-world": "# Hello World - A Programmer's First Step\r\n\r\n**Published:** December 25, 2024\r\n**Category:** Programming\r\n**Read Time:** 3 min\r\n\r\n## Introduction\r\n\r\n\"Hello, World!\" is the first step every programmer takes when learning to code. This simple program represents not just lines of code, but your official entry into the world of programming.\r\n\r\n## What is Hello World\r\n\r\nA Hello World program is a computer program that outputs or displays the message \"Hello, World!\" on a computer screen. It serves as a standard example to demonstrate the basic syntax of a programming language.\r\n\r\n### Why It Matters\r\n\r\n- **Environment Verification**: Ensures your programming environment is correctly configured\r\n- **Syntax Learning**: Master the basic structure of the language\r\n- **Confidence Building**: The sense of accomplishment from completing your first program\r\n\r\n## Implementation in Different Languages\r\n\r\n### Python\r\n```python\r\nprint(\"Hello, World!\")\r\n```\r\n\r\n### JavaScript\r\n```javascript\r\nconsole.log(\"Hello, World!\");\r\n```\r\n\r\n### Java\r\n```java\r\npublic class HelloWorld {\r\n    public static void main(String[] args) {\r\n        System.out.println(\"Hello, World!\");\r\n    }\r\n}\r\n```\r\n\r\n### C++\r\n```cpp\r\n#include <iostream>\r\n\r\nint main() {\r\n    std::cout << \"Hello, World!\" << std::endl;\r\n    return 0;\r\n}\r\n```\r\n\r\n## Programming Learning Tips\r\n\r\n### 1. Start with the Basics\r\nDon't rush to complex concepts. Begin with the simplest programs.\r\n\r\n### 2. Practice Regularly\r\nProgramming is a practical discipline. Write code, debug, and learn from mistakes.\r\n\r\n### 3. Learn the Mindset\r\nProgramming teaches you more than just writing code—it develops logical thinking.\r\n\r\n## Conclusion\r\n\r\nAlthough \"Hello, World!\" is simple, it holds infinite possibilities. From here, you will embark on an exciting programming journey!\r\n\r\nHappy coding! 🚀\r\n"
  }
};

export const articleMetadata = {
  "hello-world": {
    "zh": {
      "title": "Hello World - 编程入门指南",
      "date": "December 25, 2024",
      "category": "Programming",
      "readTime": "3 min"
    },
    "en": {
      "title": "Hello World - A Programmer's First Step",
      "date": "December 25, 2024",
      "category": "Programming",
      "readTime": "3 min"
    }
  },
  "modification-for-chained-list": {
    "zh": {
      "title": "链式列表的修改"
    }
  },
  "practice-of-chained-lists": {
    "zh": {
      "title": "CF1154E (Two Teams)"
    }
  },
  "test-post-1": {
    "zh": {
      "title": "测试文章1"
    }
  }
};

// Hook to get articles based on current language
export const useArticles = () => {
  const { i18n } = useTranslation();
  const currentLang = i18n.language;

  // Get featured and recent posts based on current language
  const getArticlesForLanguage = (lang) => {
    const effectiveLang = articleContents[lang] && Object.keys(articleContents[lang]).length > 0 ? lang : 'zh';

    return Object.keys(articleContents[effectiveLang] || {}).map(slug => ({
      id: slug,
      ...articleMetadata[slug][effectiveLang],
      icon: getIconForCategory(articleMetadata[slug][effectiveLang].category)
    }));
  };

  const getArticleContent = (slug) => {
    const lang = articleContents[currentLang] && articleContents[currentLang][slug] ? currentLang : 'zh';
    return articleContents[lang][slug];
  };

  const getArticleMetadata = (slug) => {
    const lang = articleMetadata[slug] && articleMetadata[slug][currentLang] ? currentLang : 'zh';
    return articleMetadata[slug][lang];
  };

  return {
    featuredPosts: getArticlesForLanguage(currentLang).slice(0, 1), // First article as featured
    recentPosts: getArticlesForLanguage(currentLang),
    getArticleContent,
    getArticleMetadata,
    currentLanguage: currentLang
  };
};

// Helper function to get icon based on category
const getIconForCategory = (category) => {
  const iconMap = {
    '编程': 'fas fa-code',
    'Programming': 'fas fa-code',
    '数学': 'fas fa-file-alt',
    'Mathematics': 'fas fa-file-alt',
    '个人': 'fas fa-file-alt',
    'Personal': 'fas fa-file-alt',
    '测试': 'fas fa-file-alt',
    'Test': 'fas fa-file-alt'
  };
  return iconMap[category] || 'fas fa-file-alt';
};

export default useArticles;
