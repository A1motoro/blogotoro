// Article loader utility for multilingual blog posts
// This file is auto-generated by init-articles.js
// Do not edit manually - run 'node init-articles.js' instead

import { useTranslation } from 'react-i18next';

const articleContents = {
  "zh": {
    "hello-world": "# Hello World - 编程入门指南\r\n\r\n**Published:** December 25, 2024\r\n**Category:** Programming\r\n**Read Time:** 3 min\r\n\r\n## 引言\r\n\r\n\"你好，世界！\"是每个程序员学习编程时的第一步。这个简单的程序不仅仅是代码，更代表着你正式迈入编程世界的大门。\r\n\r\n## 什么是Hello World\r\n\r\nHello World程序是一个计算机程序，它在计算机屏幕上输出或显示\"Hello, World!\"这句话。这是一个展示编程语言基本语法的标准示例。\r\n\r\n### 为什么重要\r\n\r\n- **验证环境**: 确保编程环境正确配置\r\n- **学习语法**: 掌握语言的基本结构\r\n- **建立信心**: 完成第一个程序带来的成就感\r\n\r\n## 不同语言的实现\r\n\r\n### Python\r\n```python\r\ndef hello_world():\r\n    message = \"Hello, World!\"\r\n    print(message)\r\n    return message\r\n\r\n# 调用函数\r\nresult = hello_world()\r\n```\r\n\r\n### JavaScript\r\n```javascript\r\nfunction helloWorld() {\r\n    const message = \"Hello, World!\";\r\n    console.log(message);\r\n\r\n    // 也可以使用ES6语法\r\n    const greeting = `Hello, ${message.split(',')[1].trim()}!`;\r\n    console.log(greeting);\r\n\r\n    return message;\r\n}\r\n\r\n// 执行函数\r\nhelloWorld();\r\n```\r\n\r\n### Java\r\n```java\r\npublic class HelloWorld {\r\n    public static void main(String[] args) {\r\n        String message = \"Hello, World!\";\r\n        System.out.println(message);\r\n\r\n        // 对象示例\r\n        HelloWorld instance = new HelloWorld();\r\n        instance.displayMessage(message);\r\n    }\r\n\r\n    public void displayMessage(String msg) {\r\n        System.out.println(\"Message: \" + msg);\r\n    }\r\n}\r\n```\r\n\r\n### C++\r\n```cpp\r\n#include <iostream>\r\n#include <string>\r\n\r\nclass HelloWorld {\r\nprivate:\r\n    std::string message;\r\n\r\npublic:\r\n    HelloWorld() : message(\"Hello, World!\") {}\r\n\r\n    void display() {\r\n        std::cout << message << std::endl;\r\n\r\n        // 使用循环示例\r\n        for (char c : message) {\r\n            if (c != ' ') {\r\n                std::cout << c;\r\n            }\r\n        }\r\n        std::cout << std::endl;\r\n    }\r\n};\r\n\r\nint main() {\r\n    HelloWorld hello;\r\n    hello.display();\r\n    return 0;\r\n}\r\n```\r\n\r\n## 编程学习建议\r\n\r\n### 1. 从基础开始\r\n不要急于求成，从最简单的程序入手。\r\n\r\n### 2. 多实践\r\n编程是一门实践性学科，多写代码、多调试。\r\n\r\n### 3. 学习思维方式\r\n编程不仅教你写代码，更重要的是培养逻辑思维。\r\n\r\n## 结语\r\n\r\n\"Hello, World!\"虽然简单，却承载着无限可能。从这里开始，你将开启一段精彩的编程之旅！\r\n\r\n祝你编程愉快！🚀\r\n"
  },
  "en": {
    "hello-world": "# Hello World - A Programmer's First Step\r\n\r\n**Published:** December 25, 2024\r\n**Category:** Programming\r\n**Read Time:** 3 min\r\n\r\n## Introduction\r\n\r\n\"Hello, World!\" is the first step every programmer takes when learning to code. This simple program represents not just lines of code, but your official entry into the world of programming.\r\n\r\n## What is Hello World\r\n\r\nA Hello World program is a computer program that outputs or displays the message \"Hello, World!\" on a computer screen. It serves as a standard example to demonstrate the basic syntax of a programming language.\r\n\r\n### Why It Matters\r\n\r\n- **Environment Verification**: Ensures your programming environment is correctly configured\r\n- **Syntax Learning**: Master the basic structure of the language\r\n- **Confidence Building**: The sense of accomplishment from completing your first program\r\n\r\n## Implementation in Different Languages\r\n\r\n### Python\r\n```python\r\ndef hello_world():\r\n    message = \"Hello, World!\"\r\n    print(message)\r\n    return message\r\n\r\n# Call function\r\nresult = hello_world()\r\n```\r\n\r\n### JavaScript\r\n```javascript\r\nfunction helloWorld() {\r\n    const message = \"Hello, World!\";\r\n    console.log(message);\r\n\r\n    // ES6 syntax example\r\n    const greeting = `Hello, ${message.split(',')[1].trim()}!`;\r\n    console.log(greeting);\r\n\r\n    return message;\r\n}\r\n\r\n// Execute function\r\nhelloWorld();\r\n```\r\n\r\n### Java\r\n```java\r\npublic class HelloWorld {\r\n    public static void main(String[] args) {\r\n        String message = \"Hello, World!\";\r\n        System.out.println(message);\r\n\r\n        // Object example\r\n        HelloWorld instance = new HelloWorld();\r\n        instance.displayMessage(message);\r\n    }\r\n\r\n    public void displayMessage(String msg) {\r\n        System.out.println(\"Message: \" + msg);\r\n    }\r\n}\r\n```\r\n\r\n### C++\r\n```cpp\r\n#include <iostream>\r\n#include <string>\r\n\r\nclass HelloWorld {\r\nprivate:\r\n    std::string message;\r\n\r\npublic:\r\n    HelloWorld() : message(\"Hello, World!\") {}\r\n\r\n    void display() {\r\n        std::cout << message << std::endl;\r\n\r\n        // Loop example\r\n        for (char c : message) {\r\n            if (c != ' ') {\r\n                std::cout << c;\r\n            }\r\n        }\r\n        std::cout << std::endl;\r\n    }\r\n};\r\n\r\nint main() {\r\n    HelloWorld hello;\r\n    hello.display();\r\n    return 0;\r\n}\r\n```\r\n\r\n## Programming Learning Tips\r\n\r\n### 1. Start with the Basics\r\nDon't rush to complex concepts. Begin with the simplest programs.\r\n\r\n### 2. Practice Regularly\r\nProgramming is a practical discipline. Write code, debug, and learn from mistakes.\r\n\r\n### 3. Learn the Mindset\r\nProgramming teaches you more than just writing code—it develops logical thinking.\r\n\r\n## Conclusion\r\n\r\nAlthough \"Hello, World!\" is simple, it holds infinite possibilities. From here, you will embark on an exciting programming journey!\r\n\r\nHappy coding! 🚀\r\n"
  }
};

export const articleMetadata = {
  "hello-world": {
    "zh": {
      "title": "Hello World - 编程入门指南",
      "date": "December 25, 2024",
      "category": "Programming",
      "readTime": "3 min"
    },
    "en": {
      "title": "Hello World - A Programmer's First Step",
      "date": "December 25, 2024",
      "category": "Programming",
      "readTime": "3 min"
    }
  }
};

// Hook to get articles based on current language
export const useArticles = () => {
  const { i18n } = useTranslation();
  const currentLang = i18n.language;

  // Get featured and recent posts based on current language
  const getArticlesForLanguage = (lang) => {
    const effectiveLang = articleContents[lang] && Object.keys(articleContents[lang]).length > 0 ? lang : 'zh';

    return Object.keys(articleContents[effectiveLang] || {}).map(slug => ({
      id: slug,
      ...articleMetadata[slug][effectiveLang],
      icon: getIconForCategory(articleMetadata[slug][effectiveLang].category)
    }));
  };

  const getArticleContent = (slug) => {
    const lang = articleContents[currentLang] && articleContents[currentLang][slug] ? currentLang : 'zh';
    return articleContents[lang][slug];
  };

  const getArticleMetadata = (slug) => {
    const lang = articleMetadata[slug] && articleMetadata[slug][currentLang] ? currentLang : 'zh';
    return articleMetadata[slug][lang];
  };

  return {
    featuredPosts: getArticlesForLanguage(currentLang).slice(0, 1), // First article as featured
    recentPosts: getArticlesForLanguage(currentLang),
    getArticleContent,
    getArticleMetadata,
    currentLanguage: currentLang
  };
};

// Helper function to get icon based on category
const getIconForCategory = (category) => {
  const iconMap = {
    '编程': 'fas fa-code',
    'Programming': 'fas fa-code',
    '数学': 'fas fa-file-alt',
    'Mathematics': 'fas fa-file-alt',
    '个人': 'fas fa-file-alt',
    'Personal': 'fas fa-file-alt',
    '测试': 'fas fa-file-alt',
    'Test': 'fas fa-file-alt'
  };
  return iconMap[category] || 'fas fa-file-alt';
};

export default useArticles;
